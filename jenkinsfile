pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "smart-invoice-eureka-server"  // Nome dell'immagine Docker
        DOCKER_TAG = "latest"             // Tag per l'immagine
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout del codice dal repository Git
                git url: 'https://github.com/AlePixxi/SmartInvoice.git', branch: 'main'
            }
        }

        stage('Build') {
            steps {
                script {
                    sh 'chmod +x mvnw'
                    sh 'pwd'
                    sh 'cd smart-invoice-eureka-server'
                    sh 'chmod +x smart-invoice-eureka-server/mvnw'
                    sh 'pwd'
                    sh 'ls'
                    // Costruire l'applicazione usando Maven
                    sh './smart-invoice-eureka-server/mvnw clean install -DskipTests'

                    // Costruire l'immagine Docker
                    sh 'docker build -t $DOCKER_IMAGE:$DOCKER_TAG .'
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // Esegui il deploy dell'immagine Docker
                    sh 'docker run -d -p 8761:8761 --name $DOCKER_IMAGE $DOCKER_IMAGE:$DOCKER_TAG'
                }
            }
        }

        stage('Cleanup') {
            steps {
                script {
                    // Pulisci i container Docker dopo il deploy (opzionale)
                    sh 'docker container prune -f'
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline eseguita con successo!'
        }
        failure {
            echo 'La pipeline Ã¨ fallita!'
        }
    }
}
